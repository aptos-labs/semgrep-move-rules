rules:
  - id: constructor-ref-leak
    languages: [move_on_aptos]
    message: Leaking the ConstructorRef via public functions can create significant security vulnerabilities. The ConstructorRef permits adding resources to an object and generating other capabilities (or "Refs"), which can be exploited by attackers to manipulate the object beyond intended use.
    severity: WARNING
    metadata:
      likelihood: MEDIUM
      impact: HIGH
      confidence: LOW
      category: security
      references:
        - https://aptos.dev/en/build/smart-contracts/move-security-guidelines#constructorref-leak
      license: Copyright 2024 Aptos Labs
    patterns:
      - pattern-not: |
          #[test_only]
          fun $FUN(...): ...
      - pattern-not: |
          #[test]
          fun $FUN(...): ...
      - pattern-not: |
          #[test(...)]
          fun $FUN(...): ...
      - pattern-not-inside: |
          #[test_only]
          module $ADDR::$MODULE { ... }
      - pattern-not-inside: |
          #[test]
          module $ADDR::$MODULE { ... }
      - pattern-not-inside: |
          #[test(...)]
          module $ADDR::$MODULE { ... }
      
      # Aptos libraries are exempted
      - pattern-not-inside: |
            module aptos_token_objects::$ANY { ... }
      - pattern-not-inside: |
            module aptos_framework::$ANY { ... }
      
      - pattern-either:
        - pattern: |
            public fun $FUN(...): $RETURN
        - pattern: |
            public fun $FUN(...): (..., $RETURN, ...)
      - metavariable-pattern:
          metavariable: $RETURN
          pattern-either:
            - pattern: ConstructorRef
            - pattern: object::ConstructorRef
            - pattern: std::object::ConstructorRef
            - pattern: aptos_framework::object::ConstructorRef
            - pattern: 0x1::object::ConstructorRef