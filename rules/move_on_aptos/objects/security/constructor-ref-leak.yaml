rules:
  - id: constructor-ref-leak
    languages: [move_on_aptos]
    message: Leaking the ConstructorRef via public functions permits adding resources to an object and generating other capabilities (or "Refs"), which can be used by attackers to manipulate the object beyond intended use.
    severity: WARNING
    metadata:
      likelihood: MEDIUM
      impact: HIGH
      confidence: MEDIUM
      category: security
      references:
        - https://aptos.dev/en/build/smart-contracts/move-security-guidelines#constructorref-leak
      license: Copyright 2024 Aptos Labs
    patterns:
      - pattern-either:
          - pattern: |
              public fun $ENTRYPOINT(...): aptos_framework::object::ConstructorRef
          - pattern: |
              public fun $ENTRYPOINT(...): (..., aptos_framework::object::ConstructorRef, ...)

        # Not inside a deprecated function
      - pattern-not-inside: >
          fun $ENTRYPOINT(...): ... {
            abort $_
          }

      # Tests are exempted
      - pattern-not: |
          #[test]
          fun $ENTRYPOINT(...) : ...
      - pattern-not: |
          #[test(...)]
          fun $ENTRYPOINT(...) : ...
      - pattern-not: |
          #[test_only]
          fun $ENTRYPOINT(...) : ...
      - pattern-not-inside: |
          #[test_only]
          module $ADDR::$MODULE { ... }

      # Exposing CostructorRef inside Aptos libraries is intended
      - pattern-not-inside: |
          module aptos_token_objects::$ANY { ... }
      - pattern-not-inside: |
          module aptos_framework::$ANY { ... }
